"""
Django settings for BidangilBack project.

Generated by 'django-admin startproject' using Django 4.2.20.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
#TrackingAPI = 56r7vls8-an4v-octa-i1sc-bhtgqbryhuwl
#Exrate = 36ff849b181fba0ac6d59401d875cd0d
#superuser : bidangilDuo
#superuserPW: dlsgjsehd2020
# SHA256:Da5LfyNDLlcH3+EWTcTxVv/K2WsUvRcwpOjfa1IHaCk after2842@gmail.com
# Django automatically send a Unmasked csrf to the requested browser upon the very first request==> store directly to the browser (checked from developer's tool)
# When get_token(request) is executed => it generates Masked csrf token based on the Unmasked csrf stored in browser
# Now, when django authenticate the request with csrf tokens, it extract Unmasked from browser, and Masked from headers.
# Then it verifies whether the Masked token is dervied from Masked token
# webhook: whsec_BYfhBcSfSZQryHAiTMuAFj1kD6aKTB9p
from pathlib import Path
from celery.schedules import crontab
GOOGLE_APP_PW = 
SECRET_KEY = 
STRIPE_API = 
STRPIE_WEBHOOK_SEC = 
DEBUG = True
GOOGLE_API= 
GPT_SECRET = 
ALLOWED_HOSTS = 

EMAIL_BACKEND =
EMAIL_HOST =
EMAIL_PORT = 
EMAIL_USE_TLS = 
EMAIL_HOST_USER =
EMAIL_HOST_PASSWORD = 



AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY = 
SMS_API_KEY = 
BASE_DIR = Path(__file__).resolve().parent.parent




INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'usrinfo.apps.UsrinfoConfig',
    'corsheaders',
    "channels",

]
ASGI_APPLICATION = "BidangilBack.asgi.application"


MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',    
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CORS_ALLOW_ALL_ORIGINS = True

CORS_ALLOW_METHODS =[
    'GET',
    'POST',
    'OPTIONS',
]

# Allow headers
CORS_ALLOW_HEADERS = [
    'Content-Type',
    "X-csrftoken",
]
CSRF_TRUSTED_ORIGINS = [
    "http://localhost:3000",
    "http://54.176.252.155"
]


CORS_ALLOW_CREDENTIALS = True
ROOT_URLCONF = 'BidangilBack.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'BidangilBack.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#Celery configurations

# Broker / results
CELERY_BROKER_URL = "redis://127.0.0.1:6379/0"
CELERY_RESULT_BACKEND = "redis://127.0.0.1:6379/1"

# Time & reliability
CELERY_TIMEZONE = "UTC"           
CELERY_TASK_ACKS_LATE = True     
CELERY_WORKER_PREFETCH_MULTIPLIER = 1
CELERY_TASK_TIME_LIMIT = 300

# put all delivery_update jobs on a separate queue
CELERY_TASK_DEFAULT_QUEUE = "default"
CELERY_TASK_QUEUES = {
    "delivery_update": {"routing_key": "delivery_update"},
}

CELERY_BEAT_SCHEDULE = {
    "greet-every-2h": {
        "task": "usrinfo.tasks.run_and_update",
        "schedule": crontab(minute=0,hour='*/2'),  #
        "options": {"queue": "delivery_update"},
    },
}

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("127.0.0.1", 6379)],  
        },
    },
}
